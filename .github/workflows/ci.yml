name: CI

on:
  pull_request:
  workflow_dispatch: {}

jobs:
  ui:
    name: ui
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for ui directory
        id: detect
        run: |
          if [ -d ui ]; then echo "has_ui=true" >> $GITHUB_OUTPUT; else echo "has_ui=false" >> $GITHUB_OUTPUT; fi

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Enable Corepack
        run: corepack enable

      - name: Prepare pnpm
        run: corepack prepare pnpm@9 --activate

      - name: Install deps (ui)
        if: steps.detect.outputs.has_ui == 'true'
        run: pnpm -C ui install --frozen-lockfile=false

      - name: Typecheck
        if: steps.detect.outputs.has_ui == 'true'
        run: pnpm -C ui typecheck

      - name: Lint
        if: steps.detect.outputs.has_ui == 'true'
        run: pnpm -C ui lint

      - name: Build
        if: steps.detect.outputs.has_ui == 'true'
        run: pnpm -C ui build

      - name: Skip (no ui/)
        if: steps.detect.outputs.has_ui != 'true'
        run: echo "No ui/ directory; skipping UI checks."

  go:
    name: go
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect Go project
        id: detect
        run: |
          if [ -f go.mod ] || git ls-files '*.go' | grep -q .; then
            echo "has_go=true" >> $GITHUB_OUTPUT
          else
            echo "has_go=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Go env
        if: steps.detect.outputs.has_go == 'true'
        run: |
          go version
          go env GOPATH GOMOD

      - name: Test
        if: steps.detect.outputs.has_go == 'true'
        run: go test ./... -race -cover

      - name: Skip (no Go detected)
        if: steps.detect.outputs.has_go != 'true'
        run: echo "No Go files found; skipping tests."
